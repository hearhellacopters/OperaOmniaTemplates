//------------------------------------------------
//--- 010 Editor v11.0 Binary Template
//
//      File: .g1fxpt
//   Authors: Hellacopters
//   Version: 1
//   Purpose: Understanding
//  Category: OO_Asset
// File Mask: .g1fxpt
//  ID Bytes: 
//   History: 1.0 - Satrted file
//------------------------------------------------

//readsize

typedef struct {
    int Read16_1<fgcolor=cAqua, bgcolor=cBlack>;
    int Read16_2;
    int Read16_3;
    int Read16_4;
} read16<open=true>;

typedef struct {
    int read20_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read20_2;
    int read20_3;
    int read20_4;
    float read20_5;
    int dummy1<hidden=true>;
    int dummy2<hidden=true>;
    int dummy3<hidden=true>;
} read20<open=true>;

typedef struct {
    int read24_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read24_2;
    int read24_3;
    int read24_4;
    float read24_5;
    float read24_8;
    int dummy1<hidden=true>;
    int dummy2<hidden=true>;
} read24<open=true>;

typedef struct {
    int read32_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read32_2;
    int read32_3;
    int read32_4;
    int read32_5;
    int read32_6;
    int read32_7;
    float read32_8;
} read32<open=true>;

typedef struct {
    int read36_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read36_2;
    int read36_3;
    int read36_4;
    int read36_5;
    int read36_6;
    int read36_7;
    float read36_7;
    float read36_8;
    int dummy1<hidden=true>;
    int dummy2<hidden=true>;
    int dummy3<hidden=true>;
} read36<open=true>;

typedef struct {
    int Read44_1<fgcolor=cAqua, bgcolor=cBlack>;
    int Read44_2;
    int Read44_3;
    int Read44_4;
    int Read44_5;
    int Read44_6;
    int Read44_7;
    int Read44_8;
    int Read44_9;
    int Read44_10;
    int Read44_11;
    int dummy<hidden=true>;
} read44<open=true>;

typedef struct {
    int Read48_1<fgcolor=cAqua, bgcolor=cBlack>;
    int Read48_2;
    int Read48_3;
    int Read48_4;
    int Read48_5;
    int Read48_6;
    float Read48_7;
    int Read48_8;
    int Read48_9;
    float Read48_10;
    int Read48_11;
    int Read48_12;
} read48<open=true>;

typedef struct {
    int Read64_1<fgcolor=cAqua, bgcolor=cBlack>;
    int Read64_2;
    int Read64_3;
    int Read64_4;
    int Read64_5;
    int Read64_6;
    int Read64_7;
    float Read64_8;
    int Read64_9;
    int Read64_10;
    int Read64_11;
    int Read64_12;
    float Read64_13;
    float Read64_14;
    float Read64_15;
    float Read64_16;
} read64<open=true>;

typedef struct {
    int read76_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read76_2;
    int read76_3;
    int read76_4;
    int read76_5;
    int read76_6;
    int read76_7;
    float read76_8;
    int read76_9;
    int read76_10;
    int read76_11;
    int read76_12;
    short read76_13a;
    short read76_13b;
    float read76_14;
    float read76_15;
    float read76_16;
    float read76_17;
    float read76_18;
    float read76_19;
    float dummy<hidden=true>;
} read76<open=true>;

typedef struct {
    int read80_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read80_2;
    int read80_3;
    int read80_4;
    float read80_5;
    float read80_6;
    float read80_7;
    float read80_8;
    float read80_9;
    float read80_10;
    float read80_11;
    float read80_12;
    float read80_13;
    float read80_14;
    float read80_15;
    float read80_16;
    float read80_17;
    float read80_18;
    float read80_19;
    float read80_20;
} read80<open=true>;

typedef struct { // 96 likly wrong
    int read96_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read96_2;
    int read96_3;
    int read96_4;
    int read96_5;
    int read96_6;
    int read96_7;
    int read96_8;
    short read96_9a;
    short read96_9b;
    float read96_10;
    float read96_11;
    float read96_12;
    float read96_13;
    float read96_14;
    float read96_15;
    float read96_16;
    float read96_17;
    float read96_18;
    short read96_19a;
    short read96_19b;
    float read96_20;
    float read96_21;
    float read96_22;
    float read96_23;
    float read96_24;
} read96<open=true>;

typedef struct {
    int read112_1<fgcolor=cAqua, bgcolor=cBlack>;
    int read112_2;
    int read112_3;
    int read112_4;
    float read112_5;
    int read112_6;
    int read112_7;
    int read112_8;
    int read112_9;
    float read112_10;
    int read112_11;
    int read112_12;
    int read112_13;
    int read112_14;
    float read112_15;
    int read112_16;
    int read112_17;
    int read112_18;
    float read112_19;
    float read112_20;
    float read112_21;
    float read112_22;
    float read112_23;
    float read112_24;
    float read112_25;
    float read112_26;
    float read112_27;
    float read112_28;
} read112<open=true>;

typedef struct { // likely wrong
    int read128_1<fgcolor=cAqua, bgcolor=cBlack>;
    float read128_2;
    float read128_3;
    float read128_4;
    float read128_5;
    float read128_6;
    float read128_7;
    float read128_8;
    float read128_9;
    float read128_10;
    float read128_11;
    float read128_12;
    float read128_13;
    float read128_14;
    float read128_15;
    float read128_16;
    float read128_17;
    float read128_18;
    float read128_19;
    float read128_20;
    float read128_21;
    float read128_22;
    float read128_23;
    float read128_24;
    float read128_25;
    float read128_26;
    float read128_27;
    float read128_28;
    float read128_29;
    float read128_30;
    float read128_31;
    float read128_32;
} read128<open=true>;

typedef struct {
    int read144_1Size<fgcolor=cRed, bgcolor=cBlack>;
    int read144_1ExtRef1<fgcolor=cPurple, bgcolor=cWhite>;
    int read144_1ExtRef2<fgcolor=cPurple, bgcolor=cWhite>;
    int read144_1ExtRef3<fgcolor=cPurple, bgcolor=cWhite>;
    read80 data;
    read48 data;
} read144<open=true, fgcolor=cAqua, bgcolor=cBlack>;

//advanced

void readarea2() {
    int readarea2_Size<fgcolor=cRed, bgcolor=cBlack>;
    int readarea2_1;
    int readarea2_2;
    int readarea2_3;
    int readarea2_4;
    int readarea2_5;
    int readarea2_6;
    int readarea2_7;
    int readarea2_8Remaining;
    readloc();
    readloc();
    readloc();
    readloc();
    readloc(); 
    readloc();
    readloc(); 
    readloc();
    readloc();
    readloc(); 
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc(); 
    readloc();
    short readarea2_25a;
    short readarea2_25b;
    float readarea2_26;
    float readarea2_27;
    float readarea2_28;
    float readarea2_30;
    float readarea2_31;
    float readarea2_32;
    float readarea2_33;
    float readarea2_34;
    float readarea2_35;
    float readarea2_36;
    float readarea2_37;
    float readarea2_38;
};

void readprime() {
    int readprime_0size<comment="580", fgcolor=cBlack, bgcolor=cWhite>;
    long readprime_1<comment="496", fgcolor=cBlack, bgcolor=cWhite>;
    long readprime_2<comment="0">;
    float readprime_3<comment="1">;
    float readprime_4<comment="1">;
    float readprime_5<comment="1">;
    float readprime_6<comment="1">;
    float readprime_7<comment="1">;
    float readprime_8<comment="1">;
    float readprime_9<comment="1">;
    float readprime_10<comment="1">;
    float readprime_11<comment="1">;
    float readprime_12<comment="1">;
    float readprime_13<comment="1">;
    float readprime_14<comment="1">;
    float readprime_15<comment="1">;
    float readprime_16<comment="1">;
    float readprime_17<comment="1">;
    float readprime_18<comment="1">;
    float readprime_19<comment="1">;
    float readprime_20<comment="1">;
    float readprime_21<comment="1">;
    float readprime_22<comment="1">;
    float readprime_23<comment="1">;
    float readprime_24<comment="1">;
    float readprime_25<comment="1">;
    float readprime_26<comment="1">;
    float readprime_27<comment="1">;
    float readprime_28<comment="1">;
    int readprime_29Meta1<comment="0">;
    local int i<hidden=true> = 0;
    int readprime_30ExtentAmount1<fgcolor=cBlue, bgcolor=cWhite>;
    int readprime_31InteralAmount1<fgcolor=cBlue, bgcolor=cWhite>;
    readloc();
    short readprime_32a;
    short readprime_32b;
    local int saver<hidden=true> = FTell();
    int readprime_33Loc;
    FSeek(saver + readprime_33Loc);
    for( i = 0; i < readprime_30ExtentAmount1; i++ ){
    int readprime_Extenal;
    }
    FSeek(saver+4);
    short readprime_34a;
    short readprime_34b;
    local int cur<hidden=true> = FTell();
    int readprime_33InteralRef<fgcolor=cPurple, bgcolor=cWhite>;
    local int returnto<hidden=true> = FTell();
    cur = cur + readprime_33InteralRef;
    FSeek(cur);
    readloc();
    FSeek(returnto);
    short readprime_36a;
    short readprime_36b;
    readloc();
    short readprime_38a;
    short readprime_38b;
    readloc();
    short readprime_40a;
    short readprime_40b;
    readloc();
    short readprime_42a;
    short readprime_42b;
    readloc();
    short readprime_44a;
    short readprime_44b;
    readloc();
    short readprime_46a;
    short readprime_46b;
    readloc();
    short readprime_48a;
    short readprime_48b;
    readloc();
    short readprime_50a;
    short readprime_50b;
    readloc();
    short readprime_52a;
    short readprime_52b;
    readloc();
    short readprime_54a;
    short readprime_54b;
    readloc();
    short readprime_56a;
    short readprime_56b;
    readloc();
    short readprime_58a;
    short readprime_58b;
    readloc();
    short readprime_60a;
    short readprime_60b;
    readloc();
    short readprime_62a;
    short readprime_62b;
    readloc();
    short readprime_64a;
    short readprime_64b;
    readloc();
    short readprime_66a;
    short readprime_66b;
    readloc();
    short readprime_68a;
    short readprime_68b;
    readloc();
    short readprime_70a;
    short readprime_70b;
    readloc();
    short readprime_72a;
    short readprime_72b;
    readloc();
    short readprime_74a;
    short readprime_74b;
    readloc();
    short readprime_76a;
    short readprime_76b;
    readloc();
    short readprime_78a;
    short readprime_78b;
    readloc();
    short readprime_80a;
    short readprime_80b;
    readloc();
    short readprime_82a;
    short readprime_82b;
    readloc();
    short readprime_84a;
    short readprime_84b;
    readloc();
    short readprime_86a;
    short readprime_86b;
    readloc();
    short readprime_88a;
    short readprime_88b;
    readloc();
    short readprime_90a;
    short readprime_90b;
    readloc();
    short readprime_92a;
    short readprime_92b;
    readloc();
    short readprime_94a;
    short readprime_94b;
    readloc();
    short readprime_96a;
    short readprime_96b;
    int readprime_97Meta;
    int readprime_98Meta;
}

typedef struct {
    int read768_1;
    int read768_2;
    int read768_3;
    int read768_4;
    int read768_5;
    int read768_6;
    int read768_7;
    int read768_8;
    int read768_9Remaning<fgcolor=cBlack, bgcolor=cWhite>;
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    readloc();
    short read768_28a;
    short read768_28b;
    float read768_29;
    float read768_30;
    float read768_31;
    float read768_32;
    float read768_33;
    float read768_34;
    float read768_35;
    float read768_36;
    float read768_37;
    float read768_38;
    float read768_39;
    float read768_40;
} read768<open=true>;

//logic


void reader() {
    local int locsaver<hidden=true> = FTell();
    int readsize<hidden=true>;
    FSeek(locsaver);
    if(readsize == 16){
       read16 data;
    }
    if(readsize == 20){
       read20 data;
    }
    if(readsize == 24){
       read24 data;
    }
    if(readsize == 32){
       read32 data;
    }
    if(readsize == 36){
       read36 data;
    }
    if(readsize == 44){
       read44 data;
    }
    if(readsize == 48){
       read48 data;
    }
    if(readsize == 64){
       read64 data;
    }
    if(readsize == 76){
       read76 data;
    }
    if(readsize == 80){
       read80 data;
    }
    if(readsize == 92){
        readloc();
        readloc();
        readloc();
    }
    if(readsize == 112){
        read112 data;
    }
    if(readsize == 128){
        read128 data;
    }
    if(readsize == 96){
       read96 data;
    }
    if(readsize == 144){
       read144 data;
    }
}

void readloc() {
    local int locsaver<hidden=true> = FTell();
    local int jump =0;
    int locread<fgcolor=cRed, bgcolor=cBlack>;
    local int returnloc<hidden=true> = FTell();
    jump = locsaver + locread;
    FSeek(jump);
    reader();
    FSeek(returnloc);
}

//struc

typedef struct {
    float header0<comment="float 1">;
    float header1;
    float header2;
    float header3;
    float header4;
    float header5<comment="float 1">;
    float header6;
    float header7;
    float header8;
    float header9;
    float header10<comment="float 1">;
    float header11;
    float header12;
    float header13;
    float header14;
    float header15<comment="float 1">;
    float header16;
    float header17;
    float header18<comment="float -1">;
    long header19<comment="long 1">;
    long header20<comment="long 1">;
    long header21<comment="long 1">;
    float header22<comment="float 1">;
    float header23;
    float header24;
    float header25;
    float header26;
    float header27<comment="float 1">;
    float header28;
    float header29;
    float header30;
    float header31;
    float header32<comment="float 1">;
    float header33;
    float header34;
    float header35;
    float header36;
    float header37<comment="float 1">;
    float header38;
    float header39;
    float header40<comment="float -1">;
    long header41<comment="long 1">;
} HeaderData<open=false, fgcolor=cYellow, bgcolor=cBlack>;


typedef struct {
    int remainingsize<fgcolor=cRed, bgcolor=cBlack>;
    int controller0;
    int readamountoffset1<fgcolor=cBlue, bgcolor=cWhite>;
    int readamountoffset2<fgcolor=cBlue, bgcolor=cWhite>;
    int readamountoffset3<fgcolor=cBlue, bgcolor=cWhite>;
    int readamountoffset4<fgcolor=cBlue, bgcolor=cWhite>;
    local int i<hidden=true> = 0;

    local int offset1locstart<hidden=true> = FTell(); //for math
    int locoffset1<fgcolor=cRed, bgcolor=cBlack>;
    local int offset1locend<hidden=true> = FTell();
    local int offset1goto<hidden=true> = 0; //for math
    local int curloc<hidden=true> = FTell();
    local int holder<hidden=true> = FTell();
    offset1goto = offset1locstart + locoffset1;
    FSeek(offset1goto);
    //first reads. mostly 560 / 496
    for( i = 0; i < readamountoffset1; i++ ){
        curloc = FTell();
        int locoffset<fgcolor=cRed, bgcolor=cBlack>;
        holder = FTell();
        curloc = curloc + locoffset;
        FSeek(curloc);
        readprime();
        FSeek(holder);
    }
    FSeek(offset1locend);
    local int offset2locstart<hidden=true> = FTell();
    int locoffset2<fgcolor=cRed, bgcolor=cBlack>;
    local int offset2locend<hidden=true> = FTell();
    local int offset2goto<hidden=true> = 0;
    offset2goto = offset2locstart + locoffset2;
    FSeek(offset2goto);
    for( i = 0; i < readamountoffset2; i++ ){
        curloc = FTell();
        int locoffset<fgcolor=cRed, bgcolor=cBlack>;
        holder = FTell();
        curloc = curloc + locoffset;
        FSeek(curloc);
        readarea2();
        FSeek(holder);
    }
    FSeek(offset2locend);
    local int offset3locstart<hidden=true> = FTell();
    int locoffset3<fgcolor=cRed, bgcolor=cBlack>;
    local int offset3locend<hidden=true> = FTell();
    local int offset3goto<hidden=true> = 0;
    offset3goto = offset3locstart + locoffset3;
    FSeek(offset3goto);
    for( i = 0; i < readamountoffset3; i++ ){
        curloc = FTell();
        int locoffset<fgcolor=cRed, bgcolor=cBlack>;
        holder = FTell();
        curloc = curloc + locoffset;
        FSeek(curloc);
        //reader();
        FSeek(holder);
    }
    FSeek(offset3locend);
    local int offset4locstart<hidden=true> = FTell();
    int locoffset4<fgcolor=cRed, bgcolor=cBlack>;
    local int offset4locend<hidden=true> = FTell();
    local int offset4goto<hidden=true> = 0;
    offset4goto = offset4locstart + locoffset4;
    FSeek(offset4goto);
    for( i = 0; i < readamountoffset4; i++ ){
        curloc = FTell();
        int locoffset<fgcolor=cRed, bgcolor=cBlack>;
        holder = FTell();
        curloc = curloc + locoffset;
        FSeek(curloc);
        //reader();
        FSeek(holder);
    }
    FSeek(offset4locend);
    short metashorta;
    short metashortb<comment="short 1">;
    float metafloat1;
    float metafloat2;
    float metafloat3<comment="float 1">;
    float metafloat4;
    float metafloat5;
    float metafloat6;
    float metafloat7;
    float metafloat8;
    float metafloat9;
} Controller<open=true, fgcolor=cGreen, bgcolor=cBlack>;

struct {
    HeaderData data;
    Controller data;
}G1FXPT<open=true>;
