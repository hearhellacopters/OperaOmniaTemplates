//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: G1FX.bt
//   Authors: Hellacopters / Joschuka
//   Version: 1.0
//   Purpose: Parsing G1FX files
//  Category: OO_Asset
// File Mask: *.g1fx
//  ID Bytes: 58 46 31 47
//   History:
//   1.0      2021-08-26  Hellacopters: Made the original file
//------------------------------------------------

LittleEndian();

void Align(int n) {
    local int value = FTell() % n;

    if (value) {
        FSkip(n - value);
    }
}

typedef struct READINT {
    int data<name="data", comment="Data could be read in something other than int">;
} READINT;

typedef struct READSHORT {
    short data<name="data", comment="Data could be read in something other than short">;
} READSHORT;

typedef struct READBYTES {
    byte data<name="data", comment="Data could be read in something other than bytes">;
} READBYTES;

typedef struct {
    float Unknown0;
    float Unknown1;
    float Unknown2;
    float Unknown3;
    float Unknown4;
    float Unknown5;
    float Unknown6;
    float Unknown7;
    float Unknown8;
    float Unknown9;
    float Unknown10;
    float Unknown11;
    float Unknown12;
    float Unknown13;
    float Unknown14;
    float Unknown15;
    float Unknown16;
    float Unknown17;
    float Unknown18maybesizeflag<comment="float -1">;
    long Unknown19;
    long Unknown20;
    long Unknown21;
    float Unknown22;
    float Unknown23;
    float Unknown24;
    float Unknown25;
    float Unknown26;
    float Unknown27;
    float Unknown28;
    float Unknown29;
    float Unknown30;
    float Unknown31;
    float Unknown32;
    float Unknown33;
    float Unknown34;
    float Unknown35;
    float Unknown36;
    float Unknown37;
    float Unknown38;
    float Unknown39;
    float Unknown40;
    long Unknown41;
    long remianingreadsize;
    long Unknown43;
    long Unknown44readamountflag1;
    long Unknown45readamountflag2;
    long Unknown46readamountflag3;
    long Unknown47readamountflag4;
    long Unknown48locationormeaning1;
    long Unknown49locationormeaning2;
    long Unknown50locationormeaning3;
    long Unknown51locationormeaning4;
    short Unknown52;
    short Unknown53;
    float Unknown54;
    float Unknown55;
    float Unknown56;
    float Unknown57;
    float Unknown58;
    float Unknown59;
    float Unknown60;
    float Unknown61;
    float Unknown62;
    long Unknown63maybesizeflag;
    long Unknown64;
    long Unknown65;
    long Unknown66;
    long Unknown67;
    long Unknown68;
    long Unknown69;
    float Unknown70;
    float Unknown71;
    float Unknown72;
    float Unknown73;
    float Unknown74;
    float Unknown75;
    float Unknown76;
    float Unknown77;
    float Unknown78;
    float Unknown79;
    float Unknown80;
    float Unknown81;
    float Unknown82;
    float Unknown83;
    float Unknown84;
    float Unknown85;
    float Unknown86;
    float Unknown87;
    float Unknown88;
    float Unknown89;
    float Unknown90;
    float Unknown91;
    float Unknown92;
    float Unknown93;
    float Unknown94;
    float Unknown95;
    long Unknown96;
    long Unknown97;
    long Unknown98;
    long Unknown99;
    long Unknown100;
    long Unknown101;
    long Unknown102;
    long Unknown103;
    short Unknown104;
    short Unknown105;
    long Unknown106;
    long Unknown107;
    long readamount;
    local int readshorts = (readamount / 2) - 2;
    short reading[readshorts]<open=true>;
    long Unknown108maybesizeflag;
    long Unknown109;
    long Unknown110;
    long Unknown111;
    long Unknown112;
    long unknown113;
    long unknown114;
    long unknown115;
    long unknown116;
    long unknown117;
    long unknown118;
    long unknown119;
    float unknown120;
    float unknown121;
    float unknown122;
    float unknown123;
    float unknown124;
    float unknown125;
    float unknown126;
    float unknown127;
    float unknown128;
    float unknown129;
    float unknown130;
    float unknown131;
    float unknown132;
    float unknown133;
    float unknown134;
    float unknown135;
    long unknown135maybesizeflag;
    long unknown137;
    long unknown138;
    long unknown139;
    long unknown140;
    long unknown141;
    float unknown142;
    int unknown143;
    float unknown144;
    float unknown145;
    long unknown146;
    long unknown147;
    long unknown148maybesizeflag;
    long unknown149;
    long unknown150;
    long unknown151;
    long unknown152;
    long unknown153;
    long unknown154;
    long unknown155;
    long unknown156;
    long unknown157;
    long unknown158;
    long unknown159;
    long unknown160;
    long unknown161;
    long unknown162;
    long unknown163;
    long unknown164;
    long unknown165;
    long unknown166;
    long unknown167;
    long unknown168;
    long unknown169;
    long unknown170;
    long unknown171;
    long unknown172;
    long unknown173;
    long unknown174;
    long unknown175;
    float unknown176;
    float unknown177;
    float unknown178;
    float unknown179;
    float unknown180;
    float unknown181;
    float unknown182;
    float unknown183;
    float unknown184;
    float unknown185;
    float unknown186;
    float unknown187;
    long unknown188maybesizeflag<comment="">;
    if(unknown188maybesizeflag == 80){
    long unknown189;
    long unknown190;
    long unknown191;
    float unknown192;
    float unknown193;
    float unknown194;
    float unknown195;
    float unknown196;
    float unknown197;
    float unknown198;
    float unknown199;
    float unknown200;
    float unknown201;
    float unknown202;
    float unknown203;
    float unknown204;
    float unknown205;
    float unknown206;
    float unknown207;
    } else {
    long unknown189;
    long unknown190;
    long unknown191;
    float unknown192;
    float unknown193;
    float unknown194;
    float unknown195;
    float unknown196;
    float unknown197;
    float unknown198;
    float unknown199;
    float unknown200;
    float unknown201;
    float unknown202;
    float unknown203;
    float unknown204;
    float unknown205;
    float unknown206;
    float unknown207;
    }
    long unknown208maybesizeflag<comment="">;
    if(unknown208maybesizeflag == 80){
    long unknown209;
    long unknown210;
    long unknown211;
    float unknown212;
    float unknown213;
    float unknown214;
    float unknown215;
    float unknown216;
    float unknown217;
    float unknown218;
    float unknown219;
    float unknown220;
    float unknown221;
    float unknown222;
    float unknown223;
    float unknown224;
    float unknown225;
    float unknown226;
    float unknown227;
    } else {
    long unknown209;
    long unknown210;
    long unknown211;
    float unknown212;
    float unknown213;
    float unknown214;
    float unknown215;
    }
    long unknown216maybesizeflag;
    int unknown217;
    int unknown218;
    int unknown219;
    float unknown220;
    float unknown221;
    int unknown222;
    int unknown223;
    int unknown224maybesizeflag<comment="20 & 32 seem to be interchangeable, maybe 32 means last 3 longs aren't read and resets to next line? / 96 is size counting self">;
    if(unknown224maybesizeflag == 32){
    int unknown225;
    int unknown226;
    int unknown227;
    int unknown228;
    int unknown229;
    int unknown230;
    float unknown231;
    } 
    if(unknown224maybesizeflag == 96){
    int unknown225;
    int unknown226;
    int unknown227;
    int unknown228;
    int unknown229;
    int unknown230;
    int unknown231;
    float unknown232;
    float unknown233;
    float unknown234;
    float unknown235;
    float unknown236;
    float unknown237;
    float unknown238;
    float unknown239;
    float unknown240;
    float unknown241;
    float unknown242;
    float unknown243;
    float unknown244;
    float unknown245;
    float unknown246;
    float unknown247;
    } else {
    int unknown225;
    int unknown226;
    int unknown227;
    float unknown228;
    float unknown229;
    int unknown230;
    int unknown231;
    }
    int unknown232maybesizeflag;
    int unknown233;
    int unknown234;
    int unknown235;
    int unknown236;
    int unknown237;
    int unknown238;
    float unknown239;
    int unknown240maybesizeflag;
    int unknown241;
    int unknown242;
    int unknown243;
    float unknown244;
    int unknown245;
    int unknown246;
    int unknown247;
    int unknown248maybesizeflag;
    int unknown249;
    int unknown250;
    int unknown251;
    int unknown252;
    int unknown253;
    int unknown254;
    float unknown255;
    int unknown256maybesizeflag;
    int unknown257;
    int unknown258;
    int unknown259;
    int unknown260;
    int unknown261;
    int unknown262;
    float unknown263;
    int unknown264maybesizeflag;
    int unknown265;
    int unknown266;
    int unknown267;
    int unknown268;
    int unknown269;
    int unknown270;
    float unknown271;
    int unknown272maybesizeflag;
    int unknown273;
    int unknown274;
    int unknown275;
    int unknown276;
    int unknown277;
    int unknown278;
    float unknown279;
    int unknown280maybesizeflag;
    int unknown281;
    int unknown282;
    int unknown283;
    int unknown284;
    int unknown285;
    int unknown286;
    float unknown287;
    int unknown288maybesizeflag;
    int unknown289;
    int unknown290maybetwooshorts;
    int unknown291;
    int unknown292;
    int unknown293;
    int unknown294maybetwooshorts;
    int unknown295;
    int unknown296;
    int unknown297;
    int unknown298;
    int unknown299;
    int unknown300;
    int unknown301;
    int unknown302;
    int unknown303;
    int unknown304;
    int unknown305;
    int unknown306;
    int unknown307;
    int unknown308;
    int unknown309;
    int unknown310;
    int unknown311;
    int unknown312;
    int unknown313;
    int unknown314;
    int unknown315;
    int unknown316;
    int unknown317;
    int unknown318;
    int unknown319;
    int unknown320;
    int unknown321;
    int unknown322;
    int unknown323;
    int unknown324;
    int unknown325;
    int unknown326;
    int unknown327;
    int unknown328;
    int unknown329;
    int unknown330;
    int unknown331;
    int unknown332;
    int unknown333;
    int unknown334;
    int unknown335;
    int unknown336;
    int unknown337;
    int unknown338;
    int unknown339;
    int unknown340;
    int unknown341;
    int unknown342;
    int unknown343;
    int unknown344;
    int unknown345;
    int unknown346;
    int unknown347;
    int unknown348;
    int unknown349;
    int unknown350;
    int unknown351;
    int unknown352;
    int unknown353;
    int unknown354;
    int unknown355;
    int unknown356;
    int unknown357;
    int unknown358;
    int unknown359;
    int unknown360;
    int unknown361;
    int unknown362;
    int unknown363;
    int unknown364;
    int unknown365;
    int unknown366;
    int unknown367;
    int unknown368;
    int unknown369;
    int unknown370;
    int unknown371;
    int unknown372maybesizeflag;
    int unknown373;
    int unknown374;
    int unknown375;
    int unknown376;
    int unknown377;
    int unknown378;
    int unknown379;
    int unknown380;
    int unknown381;
    int unknown382;
    int unknown383;
    int unknown384;
    int unknown385;
    int unknown386;
    int unknown387;
    int unknown388;
    int unknown389;
    int unknown390;
    int unknown391;
    int unknown392;
    int unknown393;
    int unknown394;
    int unknown395;
    int unknown396;
    int unknown397;
    int unknown398;
    int unknown399;
    int unknown400;
    int unknown401;
    int unknown402;
    int unknown403;
    int unknown404;
    int unknown405;
    int unknown406;
    int unknown407;
    int unknown408;
    int unknown409;
    int unknown410;
    int unknown411;
    int unknown412;
    int unknown413;
    int unknown414;
    int unknown415;
    int unknown416maybesizeflag;
    int unknown417;
    int unknown418;
    int unknown419;
    int unknown420;
    int unknown421;
    int unknown422;
    int unknown423;
    int unknown424;
    int unknown425;
    int unknown426;
    int unknown427;
    int unknown428maybesizeflag;
    short unknown429;
    short unknown430;
    short unknown431;
    short unknown432;
    short unknown433;
    short unknown434;
    short unknown435;
    short unknown436;
    short unknown437;
    short unknown438;
    short unknown439;
    short unknown440;
    short unknown441;
    short unknown442;
    short unknown443;
    short unknown444;
    short unknown445;
    short unknown446;
    short unknown447;
    short unknown448;
    short unknown449;
    short unknown450;
    short unknown451;
    short unknown452;
    short unknown453;
    short unknown454;
    short unknown455;
    short unknown456;
    short unknown457;
    short unknown458;
    short unknown459;
    short unknown460;
    short unknown461;
    short unknown462;
    short unknown463;
    short unknown464;
    short unknown465;
    short unknown466;
    short unknown467maybesizeflag;
    short unknown468;
    short unknown469;
    short unknown470;
    short unknown471;
    short unknown472;
    short unknown473;
    short unknown474;
    short unknown475;
    short unknown476;
    short unknown477;
    short unknown478;
    short unknown479;
    short unknown480;
    short unknown481;
    short unknown482;
    short unknown483;
    short unknown484;
    short unknown485;
    short unknown486;
    short unknown487;
    short unknown488;
    short unknown489;
    short unknown490;
    short unknown491;
    short unknown492;
    float unknown493;
    float unknown494;
    float unknown495;
    float unknown496;
    float unknown497;
    float unknown498;
    float unknown499;
    float unknown500;
    float unknown501;
    float unknown502;
    float unknown503;
    float unknown504;
    float unknown505;
    float unknown506;
    float unknown507;
    float unknown508;
    float unknown509;
    float unknown510;
    float unknown511;
    float unknown512;
    float unknown513;
    float unknown514;
    float unknown515;
    float unknown516;
    float unknown517;
    float unknown518;
    float unknown519;
    float unknown520;
    float unknown521;
    float unknown522;
    int unknown523;
    float unknown524;
    float unknown525;
    float unknown526;
    float unknown527;
    int unknown528maybesizeflag;
    int unknown529;
    int unknown530;
    int unknown531;
    int unknown532;
    int unknown533;
    float unknown534;
    float unknown535;
    int unknown536;
    int unknown537;
    int unknown538;
    int unknown539;
    int unknown540;
    int unknown541;
    int unknown542;
    int unknown543;
    int unknown544;
    int unknown545;
    int unknown546;
    int unknown547;
    int unknown548;
    int unknown549;
    int unknown550;
    int unknown551;
    int unknown552;
    int unknown553;
    int unknown554;
    int unknown555;
    int unknown556maybesizeflag;
    int unknown557;
    int unknown558;
    float unknown559;
    int unknown560;
    int unknown561;
    int unknown567;
    int unknown568;
    float unknown569;
    float unknown570;
    float unknown571;
    float unknown572;
    int unknown573;
    int unknown574;
    int unknown575;
    int unknown576;
    int unknown577;
    int unknown578;
    int unknown579;
    int unknown580;
} READDATA1<name="Data",open=true, fgcolor=cAqua, bgcolor=cBlack> ;

typedef struct {
    local int i<hidden=true> = 0;
    int Loc<name="Loc",open=suppress, fgcolor=cAqua, bgcolor=cBlack>;
    FSeek(Loc);
    float Unknown0;
    float Unknown1;
    float Unknown2;
    float Unknown3;
    float Unknown4;
    float Unknown5;
    float Unknown6;
    float Unknown7;
    float Unknown8;
    float Unknown9;
    float Unknown10;
    float Unknown11;
    float Unknown12;
    float Unknown13;
    float Unknown14;
    float Unknown15;
    float Unknown16;
    float Unknown17;
    float Unknown18;
    long Unknown19;
    long Unknown20;
    long Unknown21;
    float Unknown22;
    float Unknown23;
    float Unknown24;
    float Unknown25;
    float Unknown26;
    float Unknown27;
    float Unknown28;
    float Unknown29;
    float Unknown30;
    float Unknown31;
    float Unknown32;
    float Unknown33;
    float Unknown34;
    float Unknown35;
    float Unknown36;
    float Unknown37;
    float Unknown38;
    float Unknown39;
    float Unknown40;
    long Unknown41;
    long Unknown42;
    long Unknown43;
    long Unknown44;
    long Unknown45;
    long Unknown46;
    long Unknown47;
    long Unknown48;
    long Unknown49;
    long Unknown50;
    long Unknown51;
    short Unknown52;
    short Unknown53;
    float Unknown54;
    float Unknown55;
    float Unknown56;
    float Unknown57;
    float Unknown58;
    float Unknown59;
    float Unknown60;
    float Unknown61;
    float Unknown62;
} READDATA2 ;

typedef struct SUBHEADER1 {
    local int i<hidden=true> = 0;
    int size<name="Size",open=suppress, fgcolor=cPurple, bgcolor=cBlack>;
    local int CurLoc = FTell();
    local int newsize<hidden=true> = (size / 4) - 1;
    for( i = 0; i < newsize; i++ ){
    long data<name="Data",open=suppress, fgcolor=cPurple, bgcolor=cBlack, comment="Data could be read in something other than long">;
    }
} SUBHEADER1;

typedef struct HEADERREADER {
     float Unknown0;
    float Unknown1;
    float Unknown2;
    float Unknown3;
    float Unknown4;
    float Unknown5;
    float Unknown6;
    float Unknown7;
    float Unknown8;
    float Unknown9;
    float Unknown10;
    float Unknown11;
    float Unknown12;
    float Unknown13;
    float Unknown14;
    float Unknown15;
    float Unknown16;
    float Unknown17;
    float Unknown18maybesizeflag<comment="float -1">;
    long Unknown19;
    long Unknown20;
    long Unknown21;
    float Unknown22;
    float Unknown23;
    float Unknown24;
    float Unknown25;
    float Unknown26;
    float Unknown27;
    float Unknown28;
    float Unknown29;
    float Unknown30;
    float Unknown31;
    float Unknown32;
    float Unknown33;
    float Unknown34;
    float Unknown35;
    float Unknown36;
    float Unknown37;
    float Unknown38;
    float Unknown39;
    float Unknown40;
    long Unknown41;
} HEADERREADER;

typedef struct GRESOURCESECTIONHEADER {
    char magic[4]<name="Magic", comment="reversed", fgcolor=cPurple, bgcolor=cBlack>;
    char version[4]<name="Version", comment="reversed", fgcolor=cYellow, bgcolor=cBlack>;
} GResourceSectionHeader;

string GetSectionName(GRESOURCESECTIONHEADER &section) {
    local string tmp = "aaaa v0000";
    SPrintf(tmp, "%c%c%c%c v%d", section.magic[3], section.magic[2], section.magic[1], section.magic[0], G1Helper_GetVersionA(section.version));
    return tmp;
}

int G1Helper_GetVersionA(char version[4]) {
    local int vbase;
    vbase = (version[3] - 0x30) * 1000;
    vbase += (version[2] - 0x30) * 100;
    vbase += (version[1] - 0x30) * 10;
    vbase += version[0] - 0x30;
    return vbase;
}

struct {
    GResourceSectionHeader header<name="Header", read=GetSectionName>;
    int32 Size<name="Size", fgcolor=cWhite, bgcolor=cBlack>;
    int unknonwn<name="Unknown">;
    int numberofloc<name="Number of locations",open=suppress, fgcolor=cRed, bgcolor=cBlack>;
    local int i<hidden=true> = 0;
    if(numberofloc == 1){
    int location;
    FSeek(location);
    READDATA1 data;
    };
} G1EF<name="G1EF", open=true>;