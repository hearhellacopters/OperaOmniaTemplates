//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: NUNO.bt
//   Authors: Raytwo, Joschka
//   Version: 1.1
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History:
//  1.1 2020-01-01  Joschka : Changed structures, added 0301 and 0302 entries
//  1.0 2019-09-09  Raytwo: Created the file
//------------------------------------------------
#ifndef G1M_NUNO
#define G1M_NUNO

#ifndef G1M_SHAREDSTRUCTURES
#include "../../G1SharedStructures.bt"
#endif // G1M_SHAREDSTRUCTURES

typedef struct CONTROLPOINT {
        float X;
        float Y;
        float Z;
        float W;
    }ControlPoint<name="ControlPoint">;

typedef struct INFLUENCE {
        int P1;
        int P2;
        int P3;
        int P4;
        float P5;
        float P6;
    }Influence<name="Influence">;

typedef struct UNKSECTION {
        
    }UnkSection<name="Unknown Section",size=0x30>;

typedef struct {
    uint32 parentBoneId<name="Parent Bone ID">; //Not 100% sure, need to implement 0301 cloth to make sure
    uint32 controlPointsCount<name="Control points count">;
    uint32 unknownSectionCount<name="Unknown section count">;
    uint32 unk1;
    uint32 unk3;
    uint32 unk2;
    FSkip(0x4C); //Unknown
    FSkip(0x10); //if(header.version>=0x30303235)        
    ControlPoint controlPoints[controlPointsCount]<name="Control Point">;
    Influence influences[controlPointsCount]<name="Influence">;
    UnkSection unknownSections[unknownSectionCount]<name="Unknown Section">;
    FSkip((unk1+unk2+unk3) * 4);    
} nunoentry_00030001<name="Entry (0x00030001)", optimize=false>;

//No idea what the entry is for but it's not necessary to rebuild meshes or bones.
typedef struct {

} nunoentry_00030002<name="Entry (0x00030002)", optimize=false>;

typedef struct {
    uint32 unk1;
    uint32 controlPointsCount<name="Control points count">;
    uint32 unknownSectionCount<name="Unknown section count">;
    uint32 unk2;
    uint32 parentBoneId<name="Parent Bone ID">;
    uint32 unk3;
    FSkip(0xC0); //Unknown
    ControlPoint controlPoints[controlPointsCount]<name="Control Point">;
    Influence influences[controlPointsCount]<name="Influence">;
    UnkSection unknownSections[unknownSectionCount]<name="Unknown Sections">;
    FSkip(unk2 * 4);
    FSkip(unk3 * 8);    
} nunoentry_00030003<name="Entry (0x00030003)", optimize=false>;

typedef struct G1MNUNOSECTION {
    uint32 subSectionCount<name="Subsection count">;
    local int i = 0;
    local int pos = 0;
    for (i = 0;i < subSectionCount; i++)
    {   
        pos = FTell();
        struct NUNOSUBCHUNK {
            uint32 flag<name="Subsection type", format=hex>;
            uint32 subsection_size<name="Subsection size", format=hex>;
            uint32 entry_count<name="Entry count">;
            switch(flag)
            {
                case 0x00030001:
                    nunoentry_00030001 entries[entry_count];
                    break;
                case 0x00030002:
                    nunoentry_00030002 entries[entry_count];
                    break;
                case 0x00030003:
                    nunoentry_00030003 entries[entry_count];
                    break;
            }
        }NunoSubSection<name="SubSection",optimize=false>; 
        FSeek(pos + NunoSubSection.subsection_size);
    }
}G1MNunoSection<name="NUNOSection",open=true>;

#ifndef G1M_FILELESS
#define G1M_FILELESS

LittleEndian();

struct FILE {
    GResourceSectionHeader header<name="Header">;
    G1MNunoSection data<name="Nuno data">;
} File<name="NUNO", open=true>;

#endif // G1M_FILELESS

#endif // G1M_NUNO