//------------------------------------------------
//--- 010 Editor v9.1.0 Binary Template
//
//      File: XL20.bt
//   Authors: Yretenai
//   Version: 1.0
//   Purpose: Parse struct-like (constant size) data
//  Category: OO_Data
// File Mask: mst_battle_enemy.bin
//  ID Bytes: 58 4C 14 00
//   History:
//   1.0    2020-06-26  Yretenai: Initial File
//------------------------------------------------

LittleEndian();

typedef struct XL20STRING {
    int size<name="Length">;
    char text[size]<name="Text">;
} XL20String;

typedef struct XL20DATE {

} XL20Date;        

local int cGrayZone = 0xd9dadc;

local int cOrange = 0xaae3f9;


// !! ADD STRUCT DATA HERE
// See DFFOO subdir
typedef struct XL20STRUCT {
    int id;
    int enemy_id;
    int ai_;
    int ailment_type_;
    int ailment_type__1;
    int ailment_type__2;
    int ailment_type__3;
    int ailment_type__4;
    int ailment_type__5;
    int ailment_type__6;
    int ailment_type__7;
    int ailment_type__8;
    int ailment_type__9;
    int ailment_type__10;
    int ailment_type__11;
    int ailment_type__12;
    int ailment_type__13;
    int ailment_type__14;
    int ailment_rank_;
    int ailment_rank__1;
    int ailment_rank__2;
    int ailment_rank__3;
    int ailment_rank__4;
    int ailment_rank__5;
    int ailment_rank__6;
    int ailment_rank__7;
    int ailment_rank__8;
    int ailment_rank__9;
    int ailment_rank__10;
    int ailment_rank__11;
    int ailment_rank__12;
    int ailment_rank__13;
    int ailment_rank__14;
    short ailment_life_;
    short ailment_life__1;
    short ailment_life__2;
    short ailment_life__3;
    short ailment_life__4;
    short ailment_life__5;
    short ailment_life__6;
    short ailment_life__7;
    short ailment_life__8;
    short ailment_life__9;
    short ailment_life__10;
    short ailment_life__11;
    short ailment_life__12;
    short ailment_life__13;
    short ailment_life__14;
    short first_attack_flag_;
    int ailment_cond_;
    int ailment_cond__1;
    int ailment_cond__2;
    int ailment_cond__3;
    int ailment_cond__4;
    int ailment_cond__5;
    int ailment_cond__6;
    int ailment_cond__7;
    int ailment_cond__8;
    int ailment_cond__9;
    int ailment_cond__10;
    int ailment_cond__11;
    int ailment_cond__12;
    int ailment_cond__13;
    int ailment_cond__14;
    int ailment_cond_arg;
    int ailment_cond_arg_1;
    int ailment_cond_arg_2;
    int ailment_cond_arg_3;
    int ailment_cond_arg_4;
    int ailment_cond_arg_5;
    int ailment_cond_arg_6;
    int ailment_cond_arg_7;
    int ailment_cond_arg_8;
    int ailment_cond_arg_9;
    int ailment_cond_arg_10;
    int ailment_cond_arg_11;
    int ailment_cond_arg_12;
    int ailment_cond_arg_13;
    int ailment_cond_arg_14;
    int ailment_cast_effect_flag_;
    int ailment_cast_effect_flag__1;
    int ailment_cast_effect_flag__2;
    int ailment_cast_effect_flag__3;
    int ailment_cast_effect_flag__4;
    int ailment_cast_effect_flag__5;
    int ailment_cast_effect_flag__6;
    int ailment_cast_effect_flag__7;
    int ailment_cast_effect_flag__8;
    int ailment_cast_effect_flag__9;
    int ailment_cast_effect_flag__10;
    int ailment_cast_effect_flag__11;
    int ailment_cast_effect_flag__12;
    int ailment_cast_effect_flag__13;
    int ailment_cast_effect_flag__14;
    int ailment_arg1_;
    int ailment_arg1__1;
    int ailment_arg1__2;
    int ailment_arg1__3;
    int ailment_arg1__4;
    int ailment_arg1__5;
    int ailment_arg1__6;
    int ailment_arg1__7;
    int ailment_arg1__8;
    int ailment_arg1__9;
    int ailment_arg1__10;
    int ailment_arg1__11;
    int ailment_arg1__12;
    int ailment_arg1__13;
    int ailment_arg1__14;
    int ailment_arg2_;
    int ailment_arg2__1;
    int ailment_arg2__2;
    int ailment_arg2__3;
    int ailment_arg2__4;
    int ailment_arg2__5;
    int ailment_arg2__6;
    int ailment_arg2__7;
    int ailment_arg2__8;
    int ailment_arg2__9;
    int ailment_arg2__10;
    int ailment_arg2__11;
    int ailment_arg2__12;
    int ailment_arg2__13;
    int ailment_arg2__14;
    int summon_enemy_id;
    int summon_enemy_id_1;
    int summon_stl_disp_flag;
    int summon_stl_disp_flag_1;
    int summon_dead_flag;
    int summon_dead_flag_1;
    int summon_lv_;
    int summon_lv__1;
    int appear_type_;
    int over_kill_class_id;
    int final_attack_ability_slot_;
    int all_ailment_resist_rank_;
    int ailment_resist_cast_type_;
    int ailment_resist_cast_type__1;
    int ailment_resist_cast_type__2;
    int ailment_resist_cast_type__3;
    int ailment_resist_cast_type__4;
    int ailment_resist_cast_type__5;
    int ailment_resist_cast_type__6;
    int ailment_resist_cast_type__7;
    int ailment_resist_cast_type__8;
    int ailment_resist_cast_type__9;
    int ailment_resist_rank_;
    int ailment_resist_rank__1;
    int ailment_resist_rank__2;
    int ailment_resist_rank__3;
    int ailment_resist_rank__4;
    int ailment_resist_rank__5;
    int ailment_resist_rank__6;
    int ailment_resist_rank__7;
    int ailment_resist_rank__8;
    int ailment_resist_rank__9;
    int use_big_boss_pursuit;
    short genuine_request_flag;
    short recast_efficiency;
    int enemy_resist_id;
    byte disp_desc_flag_;
    int desc;
    int max_recast_;
    int max_recast__1;
    int max_recast__2;
    int max_recast__3;
    int max_recast__4;
    int initial_recast_;
    int class_id_;
    int ailment_id_for_lv_cond_;
    byte final_attack_flag_;
    byte final_attack_force_all_flag_;
    byte force_boss_dead_motion_flag_;
    byte sp_dead_motion_flag_;
    byte show_recast;
    byte boss_appear_voice;
    byte reset_recast_on_summon_;
    int ability_recover_id_;
    byte bonus_enemy_flag_;
    byte use_unique_gauge_height_flag_;
    int ailment_rank_alt_;
    int ailment_rank_alt__1;
    int ailment_rank_alt__2;
    int ailment_rank_alt__3;
    int ailment_rank_alt__4;
    int ailment_rank_alt__5;
    int ailment_rank_alt__6;
    int ailment_rank_alt__7;
    int ailment_rank_alt__8;
    int ailment_rank_alt__9;
    int ailment_rank_alt__10;
    int ailment_rank_alt__11;
    int ailment_rank_alt__12;
    int ailment_rank_alt__13;
    int ailment_rank_alt__14;
    int ailment_arg1_alt_;
    int ailment_arg1_alt__1;
    int ailment_arg1_alt__2;
    int ailment_arg1_alt__3;
    int ailment_arg1_alt__4;
    int ailment_arg1_alt__5;
    int ailment_arg1_alt__6;
    int ailment_arg1_alt__7;
    int ailment_arg1_alt__8;
    int ailment_arg1_alt__9;
    int ailment_arg1_alt__10;
    int ailment_arg1_alt__11;
    int ailment_arg1_alt__12;
    int ailment_arg1_alt__13;
    int ailment_arg1_alt__14;
    int ailment_arg2_alt_;
    int ailment_arg2_alt__1;
    int ailment_arg2_alt__2;
    int ailment_arg2_alt__3;
    int ailment_arg2_alt__4;
    int ailment_arg2_alt__5;
    int ailment_arg2_alt__6;
    int ailment_arg2_alt__7;
    int ailment_arg2_alt__8;
    int ailment_arg2_alt__9;
    int ailment_arg2_alt__10;
    int ailment_arg2_alt__11;
    int ailment_arg2_alt__12;
    int ailment_arg2_alt__13;
    int ailment_arg2_alt__14;
    XL20String start<name="name_str_">;
    XL20String start<name="hp_gauge_separator_">;

} XL20Struct;

struct XL20 {
    ushort magic<name="Magic", comment="XL">;
    ushort version<name="Version", comment="0x14">;
    int count<name="Count">;
    int max_size<name="Max Size", comment="Not per se actual max size, defines how much memory to allocate to deserialize. Usually aligned to 8 or 16 bytes.">;
    int start<name="Start Pointer">;
    XL20Struct entries[count]<name="Structs", optimize=false, open=false>;
} XL<name="XL20", open=true>;
